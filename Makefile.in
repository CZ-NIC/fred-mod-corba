CC          = @CC@
CFLAGS      = @CFLAGS@
CPPFLAGS    = @CPPFLAGS@
DEFS        = @DEFS@
LDFLAGS     = @LDFLAGS@
LIBS        = @LIBS@

APR-CONFIG  = @APR_CONFIG@
APU-CONFIG  = @APU_CONFIG@
APXS        = @APXS@
PKG-CONFIG  = @PKG_CONFIG@
DOXYGEN     = @DOXYGEN@
INSTALL     = @INSTALL@
SHELL       = @SHELL@
PKG_STRING  = @PACKAGE_STRING@
PKG_NAME    = @PACKAGE_NAME@
PKG_TARNAME = @PACKAGE_TARNAME@
PKG_VERSION = @PACKAGE_VERSION@
TARDIR      = $(PKG_TARNAME)-$(PKG_VERSION)

ORB_LDFLAGS := $(shell $(PKG-CONFIG) --libs ORBit-2.0)
ORB_CFLAGS  := $(shell $(PKG-CONFIG) --cflags ORBit-2.0)
COS_LDFLAGS:= $(shell $(PKG-CONFIG) --libs ORBit-CosNaming-2.0)
COS_CFLAGS := $(shell $(PKG-CONFIG) --cflags ORBit-CosNaming-2.0)
ORB_LDFLAGS:= $(ORB_LDFLAGS) $(COS_LDFLAGS)
ORB_CFLAGS := $(ORB_CFLAGS) $(COS_CFLAGS)

AP_CPPFLAGS := $(shell $(APR-CONFIG) --cppflags)
AP_CFLAGS   := $(shell $(APR-CONFIG) --cflags)
APXS_INCLUDE:= $(shell $(APXS) -q INCLUDEDIR)
APR_INCLUDE := $(shell $(APR-CONFIG) --includes)
APU_INCLUDE := $(shell $(APU-CONFIG) --includes)
AP_INCLUDE  := -I$(APXS_INCLUDE) $(APU_INCLUDE) $(APR_INCLUDE)

AP_LDFLAGS  := $(shell $(APR-CONFIG) --ldflags)
AP_LIBS     := $(shell $(APR-CONFIG) --libs)

INSTALLDIR  := $(DESTDIR)/$(shell $(APXS) -q LIBEXECDIR)

HEADERS  = unconfig.h
CFILES   = mod_corba.c
AUXFILES = config.h.in configure configure.ac doxy.conf install-sh Makefile.in README ChangeLog

.PHONY: all build install uninstall clean realclean doc dist
.SUFFIXES:

all: build

build: mod_corba.so doc

install: mod_corba.so
	$(INSTALL) -d $(INSTALLDIR)
	$(INSTALL) --mode 0755 mod_corba.so $(INSTALLDIR)

uninstall:
	-rm -f $(INSTALLDIR)/mod_corba.so

mod_corba.so: mod_corba.o
	$(CC) -Wl,-rpath $(AP_INSTALLDIR) -Bshareable -shared -o mod_corba.so $(LDFLAGS) $(LIBS) $(AP_LDFLAGS) $(ORB_LDFLAGS) $(AP_LIBS) mod_corba.o

mod_corba.o: mod_corba.c config.h
	$(CC) -fPIC $(CPPFLAGS) $(CFLAGS) $(AP_CPPFLAGS) $(AP_CFLAGS) $(AP_INCLUDE) $(DEFS) $(ORB_CFLAGS) -c mod_corba.c

clean:
	-rm -f mod_corba.o
	-rm -f mod_corba.so
	-rm -f doxygen.log
	-rm -fr doc/html
	-rm -f $(TARDIR).tar

realclean: clean
	-rm -rf acconfig.h autom4te.cache configure Makefile config.h config.log config.status

doc: doxy.conf
	@ if test x$(DOXYGEN) = x; then \
		 echo "Doxygen executable not configured."; \
		 echo "Use --with-doc parameter to configure."; \
	   else \
		 $(DOXYGEN) doxy.conf 2>&1 1>&doxygen.log; \
		 echo "index.html is in doc/html directory"; \
		 echo "output from doxygen is in doxygen.log file"; \
	   fi

dist: $(HEADERS) $(CFILES) $(AUXFILES) doc
	@ echo "Creating distribution tar archive for package $(PKG_STRING)."
	@ mkdir -p $(TARDIR)/doc
	@ echo "Bundling source files and build files."
	@ cp $(HEADERS) $(CFILES) $(AUXFILES) $(TARDIR)
	@ echo "Bundling documentation."
	@ cp doc/mainpage.h $(TARDIR)/doc
	@ cp -r doc/html $(TARDIR)/doc/html
	@ echo "Creating tar file."
	tar cvf $(TARDIR).tar $(TARDIR)
	@ rm -rf $(TARDIR)
